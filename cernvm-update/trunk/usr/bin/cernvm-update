#!/bin/sh

# Looks for a new available cernvm-system version and steers the update process

set -e

VERSION=0.1

ROOT_RW=/mnt/.rw
ROOT_RO=/mnt/.ro
FQRN=$(attr -qg fqrn ${ROOT_RO})
REPO_URL=$(attr -qg host ${ROOT_RO})
REPO_PROXY=$(attr -qg proxy ${ROOT_RO})
if [ "x$REPO_PROXY" = "xDIRECT" ]; then
  REPO_PROXY=
fi

die() {
  local msg=$1
  echo $msg 1>&2
  exit 1
}

[ ! -f ${ROOT_RW}/aux/cvmfs_snapshot ] && die "${ROOT_RW}/aux/cvmfs_snapshot missing"
INSTALLED_SNAPSHOT=$(head -n1 /mnt/.rw/aux/cvmfs_snapshot)
INSTALLED_TAG=$(tail -n1 /mnt/.rw/aux/cvmfs_snapshot)
INSTALLED_VERSION=$(rpm -q cernvm-system --queryformat "%{VERSION}")

fetch_taglist() {
  local hash=$(http_proxy=$REPO_PROXY curl $REPO_URL/.cvmfspublished 2>/dev/null | grep -a ^H | head -n1 | tail -c41)
  local path="${REPO_URL}/data/${hash:0:2}/${hash:2}H"
  local tmpfile=$(mktemp)

  http_proxy=$REPO_PROXY curl $path 2>/dev/null | cvmfs_swissknife zpipe -d > $tmpfile
  echo $tmpfile
}

usage() {
  echo "$0 [-c(heck)] [-a(pply)] [-(d)angling]"
}

version() {
  echo "$0 version $VERSION"
}

check() {
  if [ "x$INSTALLED_SNAPSHOT" = "x$AVAILABLE_SNAPSHOT" ]; then
    return 0
  else
    return 1
  fi
}

get_dangling_packages() {
  local all_packages=$(mktemp)
  local managed_packages=$(mktemp)
  local dangling_packages=$(mktemp)

  rpm -qa --queryformat "%{NAME}\n" | sort > $all_packages
  rpm -q --requires cernvm-system | grep = | grep -v '<=' | \
    awk -F= '{print $1} END {printf "cernvm-system\ngpg-pubkey"}' | sort > $managed_packages

  local pkg
  cat $all_packages | while read; do
    pkg=$REPLY
    if ! grep -q $pkg $managed_packages; then
      echo $pkg >> $dangling_packages
    fi
  done
  #rm -f "$all_packages" "$managed_packages"

  echo $dangling_packages
}

mk_update_key() {
  echo "upd-$INSTALLED_SNAPSHOT-to-$AVAILABLE_SNAPSHOT-$(date -u +%F-%H-%M-%S)"
}

apply() {
  [ $(id -u) -ne 0 ] && die "root privileges required"
  if check; then
    return 0
  fi

  local key=$(mk_update_key)

  echo "Looking for dangling packages..."
  local dangling=$(get_dangling_packages)
  if [ $(cat $dangling | wc -l) -gt 0 ]; then
    echo "WARNING: the following packages are dangling and might NOT be managed"
    echo "by the cernvm-system meta rpm after update:"
    cat $dangling
    cp $dangling ${ROOT_RW}/aux/$key.dangling
  fi
  rm -f $dangling

  touch ${ROOT_RW}/aux/$key.triggered
  rm -f ${ROOT_RW}/aux/cvmfs_snapshot
  echo
  echo "Please reboot in order to apply update"
}

taglist=$(fetch_taglist)
AVAILABLE_SNAPSHOT=$(sqlite3 $taglist "SELECT hash FROM tags WHERE name='$INSTALLED_TAG'")
AVAILABLE_REVISION=$(sqlite3 $taglist "SELECT name FROM tags WHERE hash='$AVAILABLE_SNAPSHOT' AND name like 'cernvm%'")
AVAILABLE_VERSION=$(echo ${AVAILABLE_REVISION} | sed s/^cernvm-system-//)
rm -f "$taglist"

while getopts "cavhd" option; do
  case $option in
    c)
      check
      exit $?
    ;;
    a)
      apply
      exit $?
    ;;
    d)
      dangling=$(get_dangling_packages)
      echo Dangling:
      cat $dangling
      rm -f $dangling
      exit 0
    ;;
    h)
      usage
      exit 0
    ;;
    v)
      version
      exit 0
    ;;
    ?)
      usage
      exit 1
    ;;
  esac
done

echo "Installed: CernVM $INSTALLED_VERSION on tag $INSTALLED_TAG"
echo "Available: CernVM $AVAILABLE_VERSION"

